version: '3.3'
services:
  nginx-proxy:
    image: jwilder/nginx-proxy
    container_name: nginx-proxy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/logs:/var/log/nginx
      - ./nginx/conf:/etc/nginx/conf.d
      - ./nginx/vhost:/etc/nginx/vhost.d
      - ./nginx/dhparam:/etc/nginx/dhparam
      - ./nginx/html:/usr/share/nginx/html
      - ./nginx/certs:/etc/nginx/certs:ro
      - /var/run/docker.sock:/tmp/docker.sock:ro
    environment:
      - DHPARAM_GENERATION=false
    labels:
      - "com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy"

  letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: nginx-proxy-letsencrypt
    restart: unless-stopped
    depends_on:
      - "nginx-proxy"
    volumes:
      - ./nginx/conf:/etc/nginx/conf.d
      - ./nginx/vhost:/etc/nginx/vhost.d
      - ./nginx/dhparam:/etc/nginx/dhparam
      - ./nginx/html:/usr/share/nginx/html
      - ./nginx/certs:/etc/nginx/certs:rw
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
       - DEFAULT_EMAIL=cesarsanz91@gmail.com

  api:
    container_name: api
    build: ./python-api
    restart: unless-stopped
    expose:
      - "5000"
    volumes:
      - ./python-api/logs:/app/logs
    env_file:
      - 'variables.env'
    secrets:
      - api_secrets
    depends_on:
      - mongodb
    environment:
      - MONGODB_HOST=mongodb
      - INFLUXDB_HOST=influxdb
      - VIRTUAL_HOST=api.iotcloud.es
      - VIRTUAL_PORT=5000
      - LETSENCRYPT_HOST=api.iotcloud.es

  influx_mqtt_gateway:
    container_name: gateway
    build: ./python-gateway
    env_file:
      - 'variables.env'
    restart: unless-stopped
    volumes:
      - ./python-gateway/logs:/app/logs
    secrets:
      - gateway_secrets
    depends_on:
     - influxdb

  weather:
    container_name: weather
    build: ./python-weather
    env_file:
      - 'variables.env'
    restart: unless-stopped
    expose:
      - "5003"
    volumes:
      - ./python-weather/logs:/app/logs
    secrets:
      - weather_secrets

  modules2:
    container_name: modules2
    build: ./python-modules2
    env_file:
      - 'variables.env'
    restart: unless-stopped
    volumes:
      - ./python-modules2/logs:/app/logs
    secrets:
      - modules_secrets

  monitoring:
    container_name: monitoring
    build: ./python-monitoring
    restart: unless-stopped
    volumes:
      - ./python-monitoring/logs:/app/logs
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /etc/hostname:/app/hostname:ro
    env_file:
      - 'variables.env'

  home:
    container_name: home
    build: ./go-home
    env_file:
      - 'variables.env'
    restart: unless-stopped
    expose:
      - "5001"
    volumes:
      - ./go-home/src:/app/src
      - ./go-home/logs:/app/logs
    secrets:
      - home_secrets
    environment:
      - VIRTUAL_HOST=home.iotcloud.es
      - VIRTUAL_PORT=5001
      - LETSENCRYPT_HOST=home.iotcloud.es

  grafana-datasource:
    container_name: grafana-datasource
    build: ./go-grafana-datasource
    env_file:
      - 'variables.env'
    restart: unless-stopped
    expose:
      - "5002"
    volumes:
      - ./go-grafana-datasource/src:/app/src
      - ./go-grafana-datasource/logs:/app/logs
    secrets:
      - grafana_datasource_secrets

  grafana:
    user: "1000:1000"
    restart: unless-stopped
    image: grafana/grafana:latest
    expose:
      - "3000"
    volumes:
      - ./grafana/data:/var/lib/grafana
      - ./grafana/config:/etc/grafana
      - ./certs:/grafana/certs
      - ./grafana/log:/var/log/grafana
    environment:
      - GF_INSTALL_PLUGINS=simpod-json-datasource 0.2.6
      - GF_AUTH_GENERIC_OAUTH_CLIENT_ID__FILE=/run/secrets/grafana_secrets_clientId
      - GF_AUTH_GENERIC_OAUTH_CLIENT_SECRET__FILE=/run/secrets/grafana_secrets_clientSecret
      - VIRTUAL_HOST=grafana.iotcloud.es
      - VIRTUAL_PORT=3000
      - LETSENCRYPT_HOST=grafana.iotcloud.es
    secrets:
      - grafana_secrets_clientId
      - grafana_secrets_clientSecret

  mongodb:
    restart: unless-stopped
    image: mongo:5.0
    hostname: docker
    volumes:
      - ./mongodb:/data/db
    expose:
      - "27017"
    command: mongod --setParameter diagnosticDataCollectionEnabled=false # --quiet

  influxdb:
    image: influxdb:1.8
    env_file:
      - 'variables.env'
    volumes:
      # Mount for influxdb data directory
      - ./influxdb/data:/var/lib/influxdb
      # Mount for influxdb configuration
      - ./influxdb/config/:/etc/influxdb/
    expose:
      - "8086"
      - "8088"
    restart: unless-stopped

  mosquitto:
    image: jllopis/mosquitto
    restart: unless-stopped
    volumes:
      - ./mosquitto/data:/var/lib/mosquitto
      - ./mosquitto/log:/var/log/mosquitto
      - ./mosquitto/config:/etc/mosquitto
      - ./mosquitto/mosquitto.d:/etc/mosquitto.d
    ports:
      - "8883:8883"
      - "1883:1883"
    expose:
      - "9001"
    environment:
      - VIRTUAL_HOST=mqtt.iotcloud.es
      - VIRTUAL_PORT=9001
      - LETSENCRYPT_HOST=mqtt.iotcloud.es

  telegraf:
    image: telegraf
    restart: unless-stopped
    env_file:
      - 'variables.env'
    hostname: localhost
    volumes:
      - ./telegraf/telegraf.conf:/etc/telegraf/telegraf.conf:ro
      - ./nginx/logs:/var/log/nginx:ro
      - ./python-modules2/logs/modules.log:/var/log/modules/modules.log:ro
      - ./python-api/logs/server.log:/var/log/api/server.log:ro
      - ./python-monitoring/logs/monitoring.log:/var/log/monitoring/monitoring.log:ro
      - ./python-weather/logs/weather.log:/var/log/weather/weather.log:ro
      - ./mosquitto/log/mosquitto.log:/var/log/mosquitto/mosquitto.log:ro
      - ./go-home/logs/main.log:/var/log/home/main.log:ro
    depends_on:
     - influxdb
     - nginx-proxy

  ota:
    image: flashspys/nginx-static
    restart: unless-stopped
    container_name: ota
    expose:
      - "5004"
    volumes:
      - ./ota/data:/static
      - ./ota/config/default.conf:/etc/nginx/conf.d/default.conf
    environment:
      - VIRTUAL_HOST=ota.iotcloud.es
      - VIRTUAL_PORT=5004
      - LETSENCRYPT_HOST=ota.iotcloud.es

  backup-manager:
    build: ./backup-manager
    restart: unless-stopped
    container_name: backup-manager
    env_file:
      - 'variables.env'
    volumes:
      - ./backups:/backups
      - ./grafana/data/grafana.db:/grafana.db:ro
      - gdrive_config:/gdrive/config
    secrets:
      - gdrive_config
      - gdrive_backup_folder

volumes:
  gdrive_config:

secrets:
  modules_secrets:
      file: ./python-modules/secrets
  weather_secrets:
    file: ./python-weather/secrets
  home_secrets:
      file: ./go-home/secrets
  grafana_datasource_secrets:
      file: ./go-grafana-datasource/secrets
  api_secrets:
      file: ./python-api/secrets
  gateway_secrets:
      file: ./python-gateway/secrets
  grafana_secrets_clientId:
      file: ./grafana/secrets/clientId
  grafana_secrets_clientSecret:
      file: ./grafana/secrets/clientSecret
  gdrive_config:
      file: ./backup-manager/secrets/gdrive_config
  gdrive_backup_folder:
      file: ./backup-manager/secrets/gdrive_backup_folder
